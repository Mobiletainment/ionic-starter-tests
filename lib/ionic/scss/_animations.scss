

$view-transition-duration:              400ms;



// Slide transition
// -------------------------------

.slide-transition {
  // set a black background so leaving views can change
  // their opacity and the leaving view can fade to gray
  background-color: #000;
}

.slide-transition.nav-forward {

  .view-entering {
    // stage the entering element before the transition begins
    // view entering, comes in from the right, when navigating forward
    @include translate3d(98%, 0, 0);
    z-index: $z-index-view-above;
  }

  .view-leaving {
    // stage the leaving element before the transition begins
    z-index: $z-index-view-below;
  }

  &.transitioning .view-entering {
    // begin transitioning the entering element in from the right
    @include animation-name( slideInFromRight );
  }

  &.transitioning .view-leaving {
    // begin transitioning the leaving element out to the left
    @include animation-name( slideOutToLeft33, fadeOutToPartial, addBoxShadow );
  }

}

.slide-transition.nav-back {

  .view-entering {
    // stage the entering element before the transition begins
    // view entering, comes in from the right, when navigating forward
    @include translate3d(-33%, 0, 0);
    z-index: $z-index-view-below;
  }

  .view-leaving {
    // stage the leaving element before the transition begins
    z-index: $z-index-view-above;
  }

  &.transitioning .view-entering {
    // begin transitioning the entering element in from the left
    @include animation-name( slideInFromLeft33, fadeInFromPartial, removeBoxShadow );
  }

  &.transitioning .view-leaving {
    // begin transitioning the leaving element out to the right
    @include animation-name( slideOutToRight );
  }

}



// View Transition Globals
// -------------------------------

.view-entering,
.view-leaving {
  @include animation-duration( $view-transition-duration );
  @include animation-fill-mode( forwards );
}



$transition-duration: 250ms;
$slide-in-up-function: cubic-bezier(.1, .7, .1, 1);



.no-animation {
  > .ng-enter, &.ng-enter, > .ng-leave, &.ng-leave {
    @include transition(none);
  }
}
.noop-animation {
  > .ng-enter, &.ng-enter, > .ng-leave, &.ng-leave {
    @include transition(all cubic-bezier(0.250, 0.460, 0.450, 0.940) $transition-duration);
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}


// required for Android
.ng-animate .pane {
  position: absolute;
}

$ios-timing-function: cubic-bezier(0.4, 0.6, 0.2, 1);
$ios-transition-duration: 400ms;
$ios-transition-box-shadow: 0px 0px 12px rgba(0,0,0,0.5);

/**
 * Some component specific animations
 */
$nav-title-slide-ios-delay: $ios-transition-duration;
.nav-title-slide-ios,
.nav-title-slide-ios7 {
  &:not(.no-animation) .button.back-button {
    @include transition(all $nav-title-slide-ios-delay);
    @include transition-timing-function($ios-timing-function);

    @include translate3d(0%, 0, 0);
    opacity: 1;
    &.active, &.activated {
      opacity: 0.5;
    }
    &.ng-hide {
      opacity: 0;
      @include translate3d(30%, 0, 0);
    }
    &.ng-hide-add,
    &.ng-hide-remove {
      display: block !important;
    }
    &.ng-hide-add {
      position: absolute;
    }
  }
  > .ng-enter, &.ng-enter,
  > .ng-leave, &.ng-leave {
    @include transition(all $nav-title-slide-ios-delay);
    @include transition-timing-function($ios-timing-function);
    opacity: 1;
  }
  > .ng-enter, &.ng-enter {
    @include translate3d(30%, 0, 0);
    opacity: 0;
    &.title {
      @include translate3d(100%, 0, 0);
    }
  }
  > .ng-enter.ng-enter-active, &.ng-enter.ng-enter-active {
    @include translate3d(0, 0, 0);
    opacity: 1;
  }
  > .ng-leave.ng-leave-active, &.ng-leave.ng-leave-active {
    @include translate3d(-30%, 0, 0);
    opacity: 0;
  }

  &.reverse {
    > .ng-enter, &.ng-enter,
    > .ng-leave, &.ng-leave {
      @include transition(all $nav-title-slide-ios-delay);
      @include transition-timing-function($ios-timing-function);
      opacity: 1;
    }
    > .ng-enter, &.ng-enter {
      @include translate3d(-30%, 0, 0);
      opacity: 0;
    }
    > .ng-enter.ng-enter-active, &.ng-enter.ng-enter-active {
      @include translate3d(0, 0, 0);
      opacity: 1;
    }
    > .ng-leave.ng-leave-active, &.ng-leave.ng-leave-active {
      @include translate3d(100%, 0, 0);
      opacity: 0;
    }
  }
}

$full-slide-timing-function: ease-in-out;
$full-slide-transition-duration: 400ms;

/**
 * Some component specific animations
 */
$nav-title-slide-full-duration: $full-slide-transition-duration;
.nav-title-slide-full {
  &:not(.no-animation) .button.back-button {
    @include transition(all $nav-title-slide-full-duration);
    @include transition-timing-function($full-slide-timing-function);

    @include translate3d(0%, 0, 0);
    opacity: 1;
    &.active, &.activated {
      opacity: 0.5;
    }
    &.ng-hide {
      opacity: 0;
      @include translate3d(30%, 0, 0);
    }
    &.ng-hide-add,
    &.ng-hide-remove {
      display: block !important;
    }
    &.ng-hide-add {
      position: absolute;
    }
  }
  > .ng-enter, &.ng-enter,
  > .ng-leave, &.ng-leave {
    @include transition(all $nav-title-slide-full-duration);
    @include transition-timing-function($full-slide-timing-function);
    opacity: 1;
  }
  > .ng-enter, &.ng-enter {
    @include translate3d(30%, 0, 0);
    opacity: 0;
    &.title {
      @include translate3d(100%, 0, 0);
    }
  }
  > .ng-enter.ng-enter-active, &.ng-enter.ng-enter-active {
    @include translate3d(0, 0, 0);
    opacity: 1;
  }
  > .ng-leave.ng-leave-active, &.ng-leave.ng-leave-active {
    @include translate3d(-30%, 0, 0);
    opacity: 0;
  }

  &.reverse {
    > .ng-enter, &.ng-enter,
    > .ng-leave, &.ng-leave {
      @include transition(all $nav-title-slide-full-duration);
      @include transition-timing-function($full-slide-timing-function);
      opacity: 1;
    }
    > .ng-enter, &.ng-enter {
      @include translate3d(-30%, 0, 0);
      opacity: 0;
    }
    > .ng-enter.ng-enter-active, &.ng-enter.ng-enter-active {
      @include translate3d(0, 0, 0);
      opacity: 1;
    }
    > .ng-leave.ng-leave-active, &.ng-leave.ng-leave-active {
      @include translate3d(100%, 0, 0);
      opacity: 0;
    }
  }
}


$nav-title-android-delay: 200ms;
$nav-title-android-timing-function: linear;

.nav-title-android {
  &:not(.no-animation) .button.back-button {
    @include transition(all $nav-title-android-delay);
    @include transition-timing-function($nav-title-android-timing-function);
    opacity: 1;
    &.ng-hide {
      opacity: 0;
    }
    &.ng-hide-add,
    &.ng-hide-remove {
      display: block !important;
    }
    &.ng-hide-add {
      position: absolute;
    }
    &.ng-hide-remove {
    }
  }
  > .ng-enter, &.ng-enter,
  > .ng-leave, &.ng-leave {
    @include transition(all $nav-title-android-delay);
    @include transition-timing-function($nav-title-android-timing-function);
  }
  > .ng-enter, &.ng-enter {
    opacity: 0;
  }
  > .ng-enter.ng-enter-active, &.ng-enter.ng-enter-active {
    opacity: 1;
  }
  > .ng-leave.ng-leave-active, &.ng-leave.ng-leave-active {
    opacity: 0;
  }
}
